default:
  interruptible: true
  image: node:20-alpine

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
    - if: $CI_COMMIT_TAG

stages:
  - build
  - test
  - deploy

# ----------------------- BUILD ---------------------------------- #

#build_dev:
#  stage: build
#  script:
#    - set -e
#    - apk add --no-cache docker
#    - echo "Logging into Azure"
#    - docker login $REGISTRY_USERNAME.azurecr.io -u $REGISTRY_USERNAME -p $REGISTRY_PASSWORD
#    - echo "Building and tagging bandit-frontend dev project"
#    - docker build -t $REGISTRY_USERNAME.azurecr.io/bandit-frontend-dev:$CI_COMMIT_SHORT_SHA .
#    - echo "publishing image to azure"
#    - docker push $REGISTRY_USERNAME.azurecr.io/bandit-frontend-dev:$CI_COMMIT_SHORT_SHA
#  services:
#    - docker:27.3.1-dind
#  variables:
#    DOCKER_HOST: "tcp://docker:2375"
#    DOCKER_TLS_CERTDIR: ""
#  rules:
#    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#    - if: $CI_COMMIT_BRANCH == 'ci-cd/dev'


build_prod:
  stage: build
  script:
    - set -e
    - apk add --no-cache docker
    - echo "Logging into Azure"
    - docker login $PROD_REGISTRY_USERNAME.azurecr.io -u $PROD_REGISTRY_USERNAME -p $PROD_REGISTRY_PASSWORD
    - echo "Building and tagging bandit-frontend prod project"
    - docker build -t $PROD_REGISTRY_USERNAME.azurecr.io/bandit-frontend-prod:$CI_COMMIT_SHORT_SHA .
    - echo "publishing prod image to azure"
    - docker push $PROD_REGISTRY_USERNAME.azurecr.io/bandit-frontend-prod:$CI_COMMIT_SHORT_SHA
  services:
    - docker:27.3.1-dind
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'ci-cd/dev'


# ----------------------- TEST ---------------------------------- #
eslint:
  stage: test
  script:
    - echo "Running ESLint"
    - npm ci
    - npm run lint
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == 'ci-cd/dev'
  allow_failure: false


sast:
  stage: test
  script:
    - echo "Running SAST with dependency-check or another tool"
    - npx snyk code --severity-threshold=medium
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == 'ci-cd/dev'
  allow_failure: false



# ----------------------- DEPLOY ---------------------------------- #

deploy_webapp_prod:
  image: mcr.microsoft.com/azure-cli
  stage: deploy
  when: on_success
  needs:
    - build_prod
  before_script:
    - echo "Logging into Azure"
    - az login --service-principal -u $PROD_AZURE_APP_ID -p $PROD_AZURE_PASSWORD --tenant $PROD_AZURE_TENANT
    - az account set --subscription $SUBS_ID_PROD
  script:
    - declare -A value_map=(
      ["NAME"]="bandit-games"
      ["RESOURCE_GROUP"]="rg_bandit_games_prod"
      ["PLAN"]="asp-frontend-prod"
      ["SUBSCRIPTION"]="$SUBS_ID_PROD"
      ["RUNTIME"]="NODE:20-lts"
      ["CONTAINER_IMAGE"]="$PROD_REGISTRY_USERNAME.azurecr.io/bandit-frontend-prod"
      ["REGISTRY_URL"]="$PROD_REGISTRY_USERNAME.azurecr.io"
      ["REGISTRY_USERNAME"]="$PROD_REGISTRY_USERNAME"
      ["REGISTRY_PASSWORD"]="$PROD_REGISTRY_PASSWORD"
      )
    - serialized_map=""
    - for key in "${!value_map[@]}"; do serialized_map+="$key=${value_map[$key]} "; done
    - chmod +x cicd/deploy-webapp.sh
    - cicd/deploy-webapp.sh "$serialized_map"
  environment:
    name: webapp-prod
    deployment_tier: production
    action: start
    auto_stop_in: 1 hours
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'ci-cd/dev'
