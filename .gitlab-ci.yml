default:
  interruptible: true
  image: node:20-alpine

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
    - if: $CI_COMMIT_TAG

stages:
  - build
  - test

# ----------------------- BUILD ---------------------------------- #

.docker-setup: &docker-setup
  before_script:
    - apk add --no-cache docker
  services:
    - docker:27.3.1-dind
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""


build_dev:
  <<: *docker-setup
  stage: build
  script:
    - echo "Building bandit-frontend dev project"
    - docker build -t bandit-frontend:dev .
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'ci-cd/dev'


#build_prod:
#  <<: *docker-setup
#  stage: build
#  script:
#    - echo "Building bandit-frontend prod project"
#    - docker build -t bandit-frontend:prod .
#  rules:
#    - if: $CI_COMMIT_TAG
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#    - if: $CI_COMMIT_BRANCH == 'ci-cd/prod'



# ----------------------- TEST ---------------------------------- #
eslint:
  stage: test
  script:
    - echo "Running ESLint"
    - npm ci
    - npm run lint
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == 'ci-cd/dev'
  allow_failure: false


sast:
  stage: test
  script:
    - echo "Running SAST with dependency-check or another tool"
    - npx snyk code --severity-threshold=medium
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == 'ci-cd/dev'
  allow_failure: false



# ----------------------- DEPLOY ---------------------------------- #
#deploy:
#  stage: deploy
#  script:
#    - echo "Deploying project to development environment..."
#    # Add deployment script/commands here
#  rules:
#    - if: $CI_COMMIT_BRANCH == 'ci-cd/dev'
#  environment:
#    name: development
#    url:

# ----------------------- DESTROY ---------------------------------- #
#destroy:
#  stage: destroy
#  script:
#    - echo "Cleaning up resources in development..."
#  rules:
#    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
#    - if: $CI_COMMIT_BRANCH == 'ci-cd'
